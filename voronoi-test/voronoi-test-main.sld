(define-library (voronoi-test-main)
  (export main-program)
  (import (scheme base)
          (scheme file)
          (scheme read)
          (scheme write)
          (scheme process-context)
          (foldling command-line)
          (seth cout)
          (seth strings)
          (seth math-3d)
          (seth raster)
          (seth image)
          (seth pbm)
          )

  (begin

    (define image-width 100)
    (define image-height 100)

    (define (show-lines lines)
      (let ((image (raster-new image-width image-height (vector 0 0 0 255))))
        (for-each
         (lambda (line)
           ;; (cout line "\n")
           (let ((x0 (exact (round (vector-ref (car line) 0))))
                 (y0 (exact (round (vector-ref (car line) 1))))
                 (x1 (exact (round (vector-ref (cadr line) 0))))
                 (y1 (exact (round (vector-ref (cadr line) 1)))))
             (image-line! image (vector 255 255 255 255) x0 y0 x1 y1 rgba)
           ))
         lines)

        (image->ppm image (current-output-port))
        ))

    (define (main-program)
      (let loop ((lines '()))
        (let ((line (read-line)))
          (if (eof-object? line)
              (show-lines lines)
              (let* ((line-port (open-input-string line))
                     (x0 (read line-port))
                     (y0 (read line-port))
                     (x1 (read line-port))
                     (y1 (read line-port)))
                (loop (cons (list (vector x0 y0) (vector x1 y1))
                            lines)))))))

    ))
